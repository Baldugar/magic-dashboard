enum CardType {
  creature
  land
  instant
  sorcery
  enchantment
  planeswalker
  artifact
}

enum Color {
  W
  U
  B
  R
  G
  C
}

enum Layout {
  adventure
  class
  modal_dfc
  normal
  saga
  split
  transform
}

enum Legality {
  banned
  legal
  not_legal
  restricted
}

enum Rarity {
  common
  uncommon
  rare
  mythic
}

enum Set {
  afr
  ajmp
  akr
  anb
  dom
  eld
  g18
  grn
  ha1
  ha2
  ha3
  ha4
  ha5
  iko
  j21
  jmp
  khm
  klr
  m19
  m20
  m21
  mid
  neo
  oana
  pana
  rix
  rna
  snc
  sta
  stx
  thb
  vow
  war
  xln
  ymid
  yneo
  znr
}

enum CategoryType {
  CARD
  DECK
}

type Legalities {
  alchemy: Legality!
  brawl: Legality!
  historic: Legality!
  historicbrawl: Legality!
  standard: Legality!
}

type ImageUris {
  small: String!
  normal: String!
  large: String!
  png: String!
  art_crop: String!
  border_crop: String!
}

type CardFace {
  color_indicator: [Color!]
  colors: [Color!]
  flavor_text: String
  image_uris: ImageUris
  loyalty: String
  mana_cost: String!
  name: String!
  oracle_text: String!
  power: String
  toughness: String
  type_line: String
}

type MTGACard {
  card_faces: [CardFace!]
  cmc: Int!
  color_identity: [Color!]!
  colors: [Color!]
  flavor_text: String
  id: ID!
  image_uris: ImageUris
  layout: Layout!
  legalities: Legalities!
  loyalty: String
  mana_cost: String
  name: String!
  oracle_text: String
  power: String
  produced_mana: [Color!]
  rarity: Rarity!
  released_at: String!
  rulings_uri: String!
  scryfall_uri: String!
  set: Set!
  set_name: String!
  set_uri: String!
  toughness: String
  type_line: String!
}

type UserTag {
  id: ID!
  type: String!
  extra: String!
  colors: [Color!]!
  comment: String
  categoryType: CategoryType!
}

type MTGACard_User {
  card: MTGACard!
  userRating: Int!
  userCardTags: [UserTag!]!
  userDeckTags: [UserTag!]!
}

input TagInput {
  name: String!
  extra: String!
  colors: [Color!]!
  comment: String!
  categoryType: CategoryType!
}

type Query {
  getCards: [MTGACard!]!
  # getUserCards(userID: ID!): [MTGACard_User!]!
  # getUserTags(userID: ID!): [UserTag!]!
}

# type Mutation {
#   addTag(tag: TagInput!): UserTag!
#   addUserCard(userID: ID!, cardID: ID!): MTGACard_User!
#   updateUserCard(userID: ID!, cardID: ID!, userRating: Int!): MTGACard_User!
#   updateUserTag(userID: ID!, tagID: ID!, comment: String): UserTag!
# }
